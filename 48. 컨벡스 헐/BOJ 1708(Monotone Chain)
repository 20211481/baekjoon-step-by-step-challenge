#include<iostream>
#include<queue>
#include <algorithm>
#include <stack>
#include <iomanip>
#include <cmath>
#include <map>
#include <string>
using namespace std;
using ll = long long;
using set = pair<ll, ll>;
ll ccw(set&fir, set&sec, set&next)
{
	return ((sec.first - fir.first)*(next.second - fir.second) - (next.first - fir.first)*(sec.second - fir.second));
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int vertex;
	cin >> vertex;
	deque<set>list;
	for (int i = 0; i < vertex; i++)
	{
		int x, y;
		cin >> x >> y;
		list.push_back({ x,y });
	}
	sort(list.begin(), list.end());
	deque<set>up, down;
	for (auto& v : list)
	{
		while (up.size() >= 2 && ccw(up[up.size() - 2], up[up.size() - 1], v) >= 0)
			up.pop_back();
		up.push_back(v);
		while (down.size() >= 2 && ccw(down[down.size() - 2], down[down.size() - 1], v) <=0)
			down.pop_back();
		down.push_back(v);
	}
	
	up.insert(up.end(), down.rbegin() + 1, down.rend() - 1);
	//첫 번째 원소,마지막 원소는 겹치기 때문에 각각 하나씩 뺀 나머지를 역순으로 삽입하면 시계방향으로 쭉 convex
	cout << up.size();
	
}
